var d=Object.defineProperty;var l=(i,s,e)=>s in i?d(i,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[s]=e;var n=(i,s,e)=>(l(i,typeof s!="symbol"?s+"":s,e),e);class o extends HTMLElement{constructor(){super();n(this,"shadow");this.shadow=this.attachShadow({mode:"open"})}getA(e,t=""){return this.getAttribute(e)||t}get amount(){return Number(this.getA("amount","1"))}get sides(){return Number(this.getA("sides","6"))}get roll(){return Number(this.getA("roll",this.sides.toString()))}set roll(e){this.setAttribute("roll",e.toString())}static get observedAttributes(){return["amount","sides","roll"]}connectedCallback(){this.render(),this.addEventListeners()}addEventListeners(){this.shadow.addEventListener("click",()=>{const e=r=>{r=Math.floor(Math.random()*this.sides+1),this.roll=r};let t;t||(t=setInterval(e,100)),setTimeout(()=>{clearInterval(t)},1e3)},!1)}attributeChangedCallback(e,t,r){console.log("changed",e,t,r),this.render()}render(){const e="<style>.dice{width:5rem;height:5rem;border:2px solid #fff;border-radius:.5rem;display:flex;align-items:center;justify-content:center}.num{font-size:3rem}</style>";let t=`<div><h3>${this.amount}d${this.sides}</h3><div class="dice"><div class="num">${this.roll}</div></div></div>`;this.shadow.innerHTML=`${e}${t}`}}customElements.define("dice-roller",o);
//# sourceMappingURL=dice-roller.js.map
