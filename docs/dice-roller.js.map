{"version":3,"file":"dice-roller.js","sources":["../src/main.ts"],"sourcesContent":["export default class DiceRoller extends HTMLElement {\n\tprivate shadow: ShadowRoot;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.shadow = this.attachShadow({ mode: \"open\" });\n\t}\n\n\tprivate getA(attr: string, fallback: string = \"\"): string {\n\t\treturn this.getAttribute(attr) || fallback;\n\t}\n\n\tget amount(): number {\n\t\treturn Number(this.getA(\"amount\", \"1\"));\n\t}\n\tget sides(): number {\n\t\treturn Number(this.getA(\"sides\", \"6\"));\n\t}\n\n\tget roll(): number {\n\t\treturn Number(this.getA(\"roll\", this.sides.toString()));\n\t}\n\n\tset roll(roll) {\n\t\tthis.setAttribute(\"roll\", roll.toString());\n\t}\n\n\tstatic get observedAttributes(): string[] {\n\t\treturn [\"amount\", \"sides\", \"roll\"];\n\t}\n\n\tpublic connectedCallback(): void {\n\t\tthis.render();\n\t\tthis.addEventListeners();\n\t}\n\n\tprivate addEventListeners(): void {\n\t\tthis.shadow.addEventListener(\n\t\t\t\"click\",\n\t\t\t() => {\n\t\t\t\t// console.log(event);\n\n\t\t\t\tconst changeDieFace = (roll: number) => {\n\t\t\t\t\troll = Math.floor(Math.random() * this.sides + 1);\n\t\t\t\t\tthis.roll = roll;\n\t\t\t\t};\n\n\t\t\t\tlet nIntervalId: number | undefined;\n\n\t\t\t\tif (!nIntervalId) {\n\t\t\t\t\tnIntervalId = setInterval(changeDieFace, 100);\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tclearInterval(nIntervalId);\n\t\t\t\t}, 1000);\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t}\n\n\tpublic attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n\t\tconsole.log(\"changed\", name, oldValue, newValue);\n\n\t\tthis.render();\n\t}\n\n\tprivate render() {\n\t\tconst css = `\n        <style>\n            .dice {\n                width: 5rem;\n                height: 5rem;\n                border: 2px solid #fff;\n                border-radius: .5rem;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n            .num {\n                font-size: 3rem;\n            }\n        </style>\n        `;\n\n\t\tlet html = `\n        <div>\n            <h3>${this.amount}d${this.sides}</h3>\n            <div class=\"dice\" >\n               <div class=\"num\">${this.roll}</div>\n            </div>\n        </div>\n        `;\n\n\t\tthis.shadow.innerHTML = `${css}${html}`;\n\t}\n}\ncustomElements.define(\"dice-roller\", DiceRoller);\n"],"names":["DiceRoller","__publicField","attr","fallback","roll","changeDieFace","nIntervalId","name","oldValue","newValue","css","html"],"mappings":"wKAAA,MAAqBA,UAAmB,WAAY,CAGnD,aAAc,CACP,QAHCC,EAAA,eAIP,KAAK,OAAS,KAAK,aAAa,CAAE,KAAM,OAAQ,CACjD,CAEQ,KAAKC,EAAcC,EAAmB,GAAY,CAClD,OAAA,KAAK,aAAaD,CAAI,GAAKC,CACnC,CAEA,IAAI,QAAiB,CACpB,OAAO,OAAO,KAAK,KAAK,SAAU,GAAG,CAAC,CACvC,CACA,IAAI,OAAgB,CACnB,OAAO,OAAO,KAAK,KAAK,QAAS,GAAG,CAAC,CACtC,CAEA,IAAI,MAAe,CACX,OAAA,OAAO,KAAK,KAAK,OAAQ,KAAK,MAAM,SAAU,CAAA,CAAC,CACvD,CAEA,IAAI,KAAKC,EAAM,CACd,KAAK,aAAa,OAAQA,EAAK,SAAU,CAAA,CAC1C,CAEA,WAAW,oBAA+B,CAClC,MAAA,CAAC,SAAU,QAAS,MAAM,CAClC,CAEO,mBAA0B,CAChC,KAAK,OAAO,EACZ,KAAK,kBAAkB,CACxB,CAEQ,mBAA0B,CACjC,KAAK,OAAO,iBACX,QACA,IAAM,CAGC,MAAAC,EAAiBD,GAAiB,CACvCA,EAAO,KAAK,MAAM,KAAK,SAAW,KAAK,MAAQ,CAAC,EAChD,KAAK,KAAOA,CAAA,EAGT,IAAAE,EAECA,IACUA,EAAA,YAAYD,EAAe,GAAG,GAG7C,WAAW,IAAM,CAChB,cAAcC,CAAW,GACvB,GAAI,CACR,EACA,EAAA,CAEF,CAEO,yBAAyBC,EAAcC,EAAkBC,EAAkB,CACjF,QAAQ,IAAI,UAAWF,EAAMC,EAAUC,CAAQ,EAE/C,KAAK,OAAO,CACb,CAEQ,QAAS,CAChB,MAAMC,EAAM,oKAiBZ,IAAIC,EAAO,YAEK,KAAK,UAAU,KAAK,gDAEJ,KAAK,yBAKhC,KAAA,OAAO,UAAY,GAAGD,IAAMC,GAClC,CACD,CACA,eAAe,OAAO,cAAeX,CAAU"}